% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphs_to_edges_list.R
\name{graphs_to_edges_list}
\alias{graphs_to_edges_list}
\title{Convert per‑layer \code{igraph} graphs to per‑layer edge tables}
\usage{
graphs_to_edges_list(
  graphs_list,
  weight_attr = "weight",
  default_weight = 1,
  canonicalize_undirected = TRUE,
  keep_edge_attrs = NULL,
  verbose = TRUE
)
}
\arguments{
\item{graphs_list}{Named list of \code{igraph} objects (one per layer).}

\item{weight_attr}{Edge attribute to map into the \code{weight} column. Default \code{"weight"}.}

\item{default_weight}{Numeric value used when \code{weight_attr} is missing or \code{NA}. Default \code{1}.}

\item{canonicalize_undirected}{Logical; if \code{TRUE}, canonicalize endpoints for undirected graphs.
Default \code{TRUE}.}

\item{keep_edge_attrs}{Optional character vector of additional edge attributes to include
in the output tables (columns are appended after \code{weight}). Attributes not present in a
layer are silently skipped (set \code{verbose = TRUE} to be notified).}

\item{verbose}{Logical; print helpful messages (e.g., when vertex names are created or
requested extra attributes are missing). Default \code{TRUE}.}
}
\value{
A \strong{named list} of data frames (one per layer) with columns
\code{from}, \code{to}, \code{weight}, and any requested extras.
}
\description{
Takes a \strong{named list} of \code{igraph} graphs (one per layer) and returns a
\strong{named list} of data frames with columns \code{from}, \code{to}, and \code{weight}. This is
the inverse of \code{edges_list_to_graphs()}.
\itemize{
\item If a graph has no \code{weight} edge attribute, weights are set to \code{1}.
\item If vertex \code{name} is missing, numeric vertex IDs are assigned and coerced to
character.
\item For \strong{undirected} graphs, you can optionally canonicalize endpoints
(\code{from = min(u,v)}, \code{to = max(u,v)}) to make the orientation deterministic.
}
}
\examples{
# Two small undirected layer graphs
g1 <- igraph::graph_from_data_frame(
  data.frame(from=c("g1","g2","g3"), to=c("g2","g3","g4"), weight=c(0.8,0.6,0.7)),
  directed = FALSE
)
g2 <- igraph::graph_from_data_frame(
  data.frame(from=c("g1","g2"), to=c("g3","g4"), weight=c(0.9,0.65)),
  directed = FALSE
)

edges_list <- graphs_to_edges_list(list(E1 = g1, E2 = g2))
str(edges_list$E1)

# Round‑trip (for undirected graphs, use directed = FALSE)
list_graphs2 <- edges_list_to_graphs(edges_list, directed = FALSE)

}
