% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_network_attributes.R
\name{add_network_attributes}
\alias{add_network_attributes}
\title{Attach actor- and edge-level attributes to a multilayer network, with coverage reporting}
\usage{
add_network_attributes(
  net,
  nodesMetadata = NULL,
  featureID_col = "feature_id",
  nodeAttrCols = NULL,
  fillMissingNodes = TRUE,
  nodeFillValue = "Unknown",
  actor_key_fun = NULL,
  actor_key_normalize = NULL,
  auto_detect_keys = TRUE,
  min_match_warn = 0.7,
  report_n_examples = 10,
  map_edges_by_actor_key = TRUE,
  edgesMetadata = NULL,
  edge_from = "from",
  edge_to = "to",
  edge_layer_col = NULL,
  edgeAttrCols = NULL,
  edgeAggregate = c("first", "mean", "median", "sum"),
  directed_network = FALSE,
  fillMissingEdges = FALSE,
  edgeFillValue = NA,
  overwrite_existing = TRUE,
  verbose = TRUE,
  results_dir = getOption("mlnet.results_dir", "omicsDNA_results"),
  save_report = TRUE,
  export_edge_join_csv = FALSE,
  edge_join_prefix = "edge_attributes_join"
)
}
\arguments{
\item{net}{A \code{multinet::ml.network} object to be enriched.}

\item{nodesMetadata}{Optional data frame holding actor attributes.}

\item{featureID_col}{Name of the identifier column in \code{nodesMetadata} that
matches actors in \code{net}. Default \code{"feature_id"}.}

\item{nodeAttrCols}{Character vector of columns from \code{nodesMetadata} to attach
as actor attributes. If \code{NULL} (default) and \code{nodesMetadata} is provided,
\strong{all} columns except \code{featureID_col} are attached.}

\item{fillMissingNodes}{Logical; if \code{TRUE}, missing actor attributes are
populated with \code{nodeFillValue}. Default \code{TRUE}.}

\item{nodeFillValue}{Scalar (character or numeric) used when
\code{fillMissingNodes = TRUE}. Numeric columns are filled only if
\code{nodeFillValue} is numeric.}

\item{actor_key_fun}{Optional function used to normalise IDs before matching;
if provided, this overrides \code{actor_key_normalize}.}

\item{actor_key_normalize}{Character vector specifying a sequence of built-in
normalisers to apply (see Details). Ignored if \code{actor_key_fun} is supplied.}

\item{auto_detect_keys}{Logical; if \code{TRUE}, several candidate normaliser
sequences are tried and the one with highest actor-coverage is used.
Default \code{TRUE}.}

\item{min_match_warn}{Numeric in \verb{[0,1]}; if observed coverage is below this
threshold, the function prints examples of unmatched actors. Default \code{0.7}.}

\item{report_n_examples}{Integer; maximum number of unmatched actor examples to
include in messages and the saved report. Default \code{10}.}

\item{map_edges_by_actor_key}{Logical; if \code{TRUE}, the same ID key function is
applied to \code{edgesMetadata} endpoints before matching them to actors in \code{net}.
Default \code{TRUE}.}

\item{edgesMetadata}{Edge metadata as either (i) a data frame containing
endpoints and a layer column, or (ii) a \strong{named list} of per-layer data
frames. In either case, endpoint columns must be present (see \code{edge_from},
\code{edge_to}). Rows that cannot be mapped to actors are dropped (reported).}

\item{edge_from, edge_to}{Character scalars giving the endpoint column names in
\code{edgesMetadata}. Defaults \code{"from"} and \code{"to"}.}

\item{edge_layer_col}{For data-frame \code{edgesMetadata} only: name of the layer
column. If \code{NULL}, the function tries to auto-detect from
\code{c("layer","Layer","group","Group")}.}

\item{edgeAttrCols}{Character vector naming which columns in \code{edgesMetadata}
to attach as edge attributes. If \code{NULL}, all columns except endpoints and
(when present) the layer column are used.}

\item{edgeAggregate}{How to aggregate duplicate metadata rows per \verb{(layer, u, v)}
before attachment. One of \code{"first"}, \code{"mean"}, \code{"median"}, \code{"sum"}.
Numeric columns are combined using the selected summary; non-numeric columns
always take the first value. Default \code{"first"}.}

\item{directed_network}{Logical; whether the underlying network is treated as
directed when reconciling edge metadata (\code{u = from}, \code{v = to}) versus
undirected (\code{u = pmin(from, to)}, \code{v = pmax(from, to)}). Default \code{FALSE}.}

\item{fillMissingEdges}{Logical; if \code{TRUE}, missing edge attributes are filled
with \code{edgeFillValue} prior to attachment. Default \code{FALSE}.}

\item{edgeFillValue}{Scalar used when \code{fillMissingEdges = TRUE}. Numeric
columns are filled only if \code{edgeFillValue} is numeric.}

\item{overwrite_existing}{Logical; if \code{FALSE}, existing attributes are not
\strong{re-declared} on the network; however, the function will still \strong{set
values} for the specified actors/edges. Default \code{TRUE}.}

\item{verbose}{Logical; print progress messages, coverage summaries, and file
locations. Default \code{TRUE}.}

\item{results_dir}{Directory where reports (and optional CSV) are saved.
Default \code{getOption("mlnet.results_dir", "omicsDNA_results")}.}

\item{save_report}{Logical; if \code{TRUE}, save a compact report (RDS + TXT) to
\code{results_dir}. Default \code{TRUE}.}

\item{export_edge_join_csv}{Logical; if \code{TRUE}, save the final edge-join table
(used to attach attributes) as a CSV under \code{results_dir} with basename
\code{edge_join_prefix}. Useful for debugging. Default \code{FALSE}.}

\item{edge_join_prefix}{Basename prefix used when \code{export_edge_join_csv = TRUE}.}
}
\value{
The modified \code{multinet::ml.network} (returned invisibly). The object
also gains two attributes, \code{attr(net, "actor_match_report")} and
\code{attr(net, "edge_attach_report")}, containing concise summaries of the
attachment process.
}
\description{
This procedure enriches an existing \code{multinet::ml.network} with \strong{actor} (node)
and \strong{edge} attributes drawn from external metadata tables. It is designed to
be robust to common ID-format differences by offering simple, composable
normalisers (e.g., \code{tolower}, \code{strip_version}, \code{trim}) and an optional
auto-detection step that chooses the recipe yielding the highest coverage.
A compact report (RDS + TXT) is generated to document match rates and the
attributes attached.
}
\details{
\strong{What the function does}
\enumerate{
\item Extracts the edges and actors from \code{net}. If the network stores two layer
columns (\code{layer1}, \code{layer2}), edges are restricted to \strong{intra-layer}
interactions (i.e., \code{layer1 == layer2}).
\item If \code{nodesMetadata} is provided, actor IDs in \code{net} are reconciled against
\code{nodesMetadata[[featureID_col]]} via either a user-supplied \code{actor_key_fun}
or a pipeline of built-in normalisers listed in \code{actor_key_normalize}.
When \code{auto_detect_keys = TRUE}, several normaliser pipelines are tried and
the one with the highest actor-coverage is used. Selected columns
(\code{nodeAttrCols}, or all except \code{featureID_col} when \code{NULL}) are then
attached as actor attributes. Missing values can be filled with
\code{nodeFillValue} when \code{fillMissingNodes = TRUE}.
\item If \code{edgesMetadata} is supplied, the external endpoints are mapped to actors
in \code{net} using the same key function (when \code{map_edges_by_actor_key = TRUE}).
Rows that cannot be mapped to a pair of actors are \strong{dropped} (with a
message). When multiple metadata rows correspond to the same \verb{(layer, u, v)}
edge, they are aggregated according to \code{edgeAggregate}. Numeric columns are
collapsed using the chosen summary (e.g., \code{mean}), while non-numeric
columns take the \strong{first} value.
\item Attributes are declared (if needed) and then values are written to the
network. If attributes already exist and \code{overwrite_existing = FALSE},
the function avoids re-declaration but \strong{still sets values} for the
affected actors/edges.
\item A small report is attached to the returned object (as attributes) and,
optionally, saved to disk under \code{results_dir}.
}

\strong{Normalisers for ID reconciliation}
Built-in normaliser steps include: \code{"identity"}, \code{"trim"}, \code{"strip_version"},
\code{"tolower"}, \code{"toupper"}, \code{"rm_dash"} (remove \code{-} and \verb{_}), \code{"rm_punct"}
(remove punctuation), and \code{"alnum"} (keep alphanumerics only). You may chain
them by supplying a character vector to \code{actor_key_normalize}; for complete
control, pass a custom \code{actor_key_fun}.

\strong{Directedness and canonicalisation}
For the purpose of \strong{joining} edge metadata to network edges, endpoints are
canonicalised to \verb{(u, v) = (min, max)} when \code{directed_network = FALSE}; they
are left as \verb{(from, to)} when \code{directed_network = TRUE}.

\strong{Outputs and reporting}
The modified \code{ml.network} is returned (invisibly). Two lists are also attached
to it as attributes:
\itemize{
\item \code{attr(net, "actor_match_report")}: coverage, chosen normaliser, and examples
of unmatched actors (up to \code{report_n_examples}).
\item \code{attr(net, "edge_attach_report")}: edge counts, number of metadata rows
dropped due to unmapped endpoints, and the names of attached edge attributes.
If \code{save_report = TRUE}, both a machine-readable RDS and a human-readable TXT
summary are written to \code{results_dir}.
}
}
\examples{
\dontrun{
# Attach actor attributes (using a simple normaliser pipeline)
net <- add_network_attributes(
  net,
  nodesMetadata       = genes_info,
  featureID_col       = "GeneName",
  nodeAttrCols        = "GeneType",
  actor_key_normalize = c("strip_version", "trim", "tolower"),
  auto_detect_keys    = FALSE
)

# Attach edge attributes from a named list (one data frame per layer)
net <- add_network_attributes(
  net,
  edgesMetadata       = cons_list,
  edge_from           = "from",
  edge_to             = "to",
  edgeAttrCols        = c("n_present", "n_repeats", "prop_present"),
  directed_network    = FALSE,
  export_edge_join_csv = FALSE
)
}

}
\seealso{
\code{\link{build_multiNet}} for assembling multilayer networks;
\code{\link{edgesFromAdjacency}} and \code{\link{consensusEdges}} for
upstream edge construction and consensus.
}
